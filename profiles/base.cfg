[buildout]
parts =
    scripts
    circusd
    circusctl
    circus.ini
    couchdb.ini
    penstock.yaml
    penstock_with_init
    api_backup
    api_backup_hourly
    dump.yaml

eggs =
    circus
    circus-web
    CouchDB
    smart_open
    CouchDB
    pbkdf2
    penstock
    awscli

find-links =
    http://op:x9W3jZ@dist.quintagroup.com/op/

[config-from-template]
recipe = sact.recipe.jinjatemplate
template-file = templates/${:_buildout_section_name_}
target-file = etc/${:_buildout_section_name_}

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = python
scripts =
    circusd-stats
    circus-top
    circus-plugin
    circushttpd
    penstock
    aws

[circusd]
<=scripts
interpreter =
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[circusctl]
<=scripts
interpreter =
initialization =
    sys.argv[1:1] = ('--endpoint ${circus.ini:endpoint}').split()
scripts = circusctl

[circus.ini]
<= config-from-template
statsd = False
endpoint = ipc://${buildout:directory}/var/circus_endpoint
pubsub_endpoint = ipc://${buildout:directory}/var/circus_pubsub
app_key = circus

[couchdb.ini]
<= config-from-template
port = ${project:couchdb_port}
host = ${project:couchdb_host}
username = ${project:couchdb_admin_username}
password = ${project:couchdb_admin_password}

[logrotate.conf]
<= config-from-template
logs_bucket = ${project:logs_bucket}
logs_dir = ${project:logs_dir}
aws_access_key = ${project:logs_aws_access_key}
aws_secret_key =  ${project:logs_aws_secret_key}

[logrotate-hourly]
recipe = z3c.recipe.usercrontab
times = @hourly
command = /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${logrotate.conf:output} >>${buildout:directory}/var/log/logrotate.log 2>&1

[penstock_with_init]
<= config-from-template
target-file = ${buildout:bin-directory}/${:_buildout_section_name_}
target-executable = yes

[dump.yaml]
<= config-from-template
cmd = dump
db_url = http://${project:couchdb_username}:${project:couchdb_password}@${project:couchdb_host}:${project:couchdb_port}/${project:couchdb_backup_db}
dump_uri = s3://${project:backup_aws_access_key}:${project:backup_aws_secret_key}@${project:backup_bucket}/${project:backup_dir}/${:_buildout_section_name_}

[api_backup]
recipe = collective.recipe.template
inline =
    #!/bin/bash
    echo "----------------  Start  -----------------"
    ${buildout:bin-directory}/python ${buildout:directory}/dump.py ${buildout:directory}/etc/dump.yaml

output = ${buildout:bin-directory}/${:_buildout_section_name_}
mode = 755

[api_backup_hourly]
recipe = z3c.recipe.usercrontab
times = @hourly
command = ${buildout:bin-directory}/api_backup >> ${buildout:directory}/var/log/${:_buildout_section_name_}.log


[penstock.yaml]
<= config-from-template
prefix =
    replication_0:
      dns_sources:
        database: ${project:couchdb_remote_db}
        user: ${project:couchdb_remote_username}
        password: ${project:couchdb_remote_password}
        dns_url: ${project:couchdb_remote_host}
        port: ${project:couchdb_remote_port}
      target: http://${project:couchdb_username}:${project:couchdb_password}@${project:couchdb_host}:${project:couchdb_port}/${project:couchdb_backup_db}
      admin: http://${project:couchdb_admin_username}:${project:couchdb_admin_password}@${project:couchdb_host}:${project:couchdb_port}
      minimal_replications: 1

[project]
couchdb_port = 5984
couchdb_host = 127.0.0.1
couchdb_admin_username = username
couchdb_admin_password = password
couchdb_backup_db = openprocurement

couchdb_username = api
couchdb_password = api

logs_bucket =
logs_dir =
logs_aws_access_key =
logs_aws_secret_key =

backup_bucket =
backup_dir =
backup_aws_access_key =
backup_aws_secret_key =

couchdb_remote_username = reader
couchdb_remote_password = aaaaa
couchdb_remote_port = 5990
couchdb_remote_host = api-database.service.consul
couchdb_remote_db = openprocurement
with_penstock =

[versions]
zc.buildout = 2.2.1
zc.recipe.egg = 2.0.0a3
